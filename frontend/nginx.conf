# server{
#     listen:80;

#     location /{
#         root /usr/share/nginx/html;
#         index index.html index.htm;

#         try_files $uri $uri/ /index.html;
#     }
# }



# server {
#     listen 80;
#     # server_name localhost;

#     root /usr/share/nginx/html;
#     index index.html;

#     # Serve Static Files and Support SPA Routing
#     location / {
#         try_files $uri $uri/ /index.html;
#     }

#     # Proxy API Requests to Backend
#     location /api/ {
#         # proxy_pass http://localhost:5001/api/;
#         proxy_pass http://backend-service:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Proxy Socket.io Requests to Backend
#     location /socket.io/ {
#         proxy_pass http://backend-svc/socket.io/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Enable Gzip Compression
#     gzip on;
#     gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
#     gzip_proxied any;
#     gzip_min_length 256;

#     # Security Headers
#     add_header X-Frame-Options DENY always;
#     add_header X-Content-Type-Options nosniff always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header Referrer-Policy no-referrer-when-downgrade always;
#     add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;" always;

#     # CORS Headers (Uncomment if Needed)
#     # add_header Access-Control-Allow-Origin "*" always;
#     # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
#     # add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization" always;

#     # Logging
#     access_log /var/log/nginx/access.log;
#     error_log /var/log/nginx/error.log;

#     # Error Handling
#     error_page 404 /index.html;

#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }
# }

server {
    # Nginx will listen on port 80 inside the container.
    listen 80;

    # Set the root directory where your React app's files are located.
    root /usr/share/nginx/html;
    index index.html index.htm;

    # This location block handles serving your React application.
    # It's configured to support client-side routing (e.g., React Router).
    location / {
        # This directive tries to find a file that matches the requested URI.
        # If it can't find a matching file or directory, it serves /index.html.
        # This allows your React app to handle all routing.
        try_files $uri $uri/ /index.html;
    }

    # This location block handles all API requests by acting as a reverse proxy.
    # Any request starting with /api/ will be forwarded to your Django backend.
    location /api/ {
        # The internal Kubernetes address for your backend service.
        proxy_pass http://backend-service:8000;
        
        # These headers are important for passing information about the original
        # request to your backend application.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}